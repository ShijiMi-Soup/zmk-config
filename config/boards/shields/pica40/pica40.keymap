#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define NAV 1
#define NUM 2
#define FUNC 3

&mt {
    tapping-term-ms = <160>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <160>;
    flavor = "tap-preferred";
};

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hr: homerow_mods_ring_finger {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RING_FINGER";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hp: homerow_mods_pinky_finger {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_PINKY_FINGER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        tm: thumb_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <160>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        lh: layer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD";
            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <160>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        // Easy alt-tab with alt+backspace thumb using mod-morphs
        bstab: backspace_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_TAB";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp TAB>;
            mods = <MOD_LALT>;
        };
        lt_bspc: layer_tap_backspace_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_BT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            bindings = <&mo>, <&bstab>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_caps {
            timeout-ms = <50>;
            key-positions = <14 17>;
            layers = <0>;
            bindings = <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                         &kp Q       &kp W        &kp E       &kp R        &kp T        &kp Y      &kp U        &kp I       &kp O        &kp P
                &kp TAB  &hp LGUI A  &hr LCTRL S  &hm LALT D  &hm LSHFT F  &kp G        &kp H      &hm RSHFT J  &hm RALT K  &hr LCTRL L  &hp RGUI SEMI  &kp SQT
                &kp ESC  &kp Z       &hr LGUI X   &kp C       &kp V        &kp B        &kp B      &kp N        &kp M       &kp COMMA    &kp DOT        &kp FSLH
                                                    &mo FUNC    &mo NUM  &kp SPACE    &kp ENTER  &kp BSPC  &mo NAV
                >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_layer {
            bindings = <
                       &none     &none     &none      &none      &none        &none  &kp PG_DN  &kp UP    &kp PG_UP  &kp LCTRL
                &none  &kp LGUI  &kp LCTRL  &kp LALT  &kp LSHFT  &none        &none  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END  &none
                &none  &none     &none     &none      &none      &none        &none  &none      &none     &none      &none  &none
                                                     &none  &none  &none    &bootloader  &none  &trans
                >;
        };

        number_layer {
            bindings = <
                           &kp RBKT     &kp N7        &kp N8       &kp N9        &kp BSLH         &none  &none           &none          &kp MINUS       &kp EQUAL
                &kp LBKT   &hp LGUI N0  &hr LCTRL N4  &hm LALT N5  &hm LSHFT N6  &kp EQUAL        &none  &hm RSHFT LPAR  &hm RALT RPAR  &hr LCTRL LBRC  &hp RGUI RBRC  &kp BSLH
                &kp GRAVE  &kp N0       &kp N1        &kp N2       &kp N3        &kp MINUS        &none  &none           &none          &none           &none          &none
                                                                    &none  &trans  &kp SPACE   &kp ENTER  &kp DEL  &none
                >;
        };

        function_layer {
            bindings = <
                           &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                &kp F13    &kp F11  &kp F4  &kp F5  &kp F6  &kp PAUSE_BREAK        &bt BT_PRV    &kp RSHFT     &kp RCTRL     &kp LALT      &kp RGUI      &none
                &none      &kp F10  &kp F1  &kp F2  &kp F3  &kp CAPS               &bt BT_NXT    &none         &none         &none         &none         &bt BT_CLR
                                                  &trans  &none  &bootloader    &kp ENTER  &kp BSPC  &none
                >;
        };

    };
};